---

linux:ubuntu:jammy:
    stage: build
#    tags: [docker, vulkan]
    image: ubuntu:jammy
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
        GIT_SUBMODULE_DEPTH: 1
        pkg_format: deb
    before_script:
        -   DEBIAN_FRONTEND=noninteractive apt update -yqq
        -   DEBIAN_FRONTEND=noninteractive apt install -yqq build-essential wget libglfw3 libglfw3-dev libglm-dev pkg-config
        -   DEBIAN_FRONTEND=noninteractive wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | tee /etc/apt/trusted.gpg.d/lunarg.asc
        -   DEBIAN_FRONTEND=noninteractive wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
        -   DEBIAN_FRONTEND=noninteractive apt update -yqq
        -   DEBIAN_FRONTEND=noninteractive apt install -yqq vulkan-sdk
        -   DEBIAN_FRONTEND=noninteractive mkdir -v logs/
    script:
        -   test ! -d TVE/ && mkdir -v TVE/ || echo 'TVE folder already exists.'
        -   test ! -d TVE/shaders && mkdir -v TVE/shaders/ || echo 'Shaders folder already exists.'
        -   echo 'Building...' && make | tee logs/make.log.txt
    after_script:
        -   DEBIAN_FRONTEND=noninteractive chmod +x compile.sh && echo 'Compiling shaders...' && ./compile.sh || echo 'Failed to compile shaders!'
        -   echo 'Shaders compiled.'
        -   find -type f -name "VulkanTest*" -exec cp {} TVE/ -vf \;
        -   find shaders/ -type f -name "*.spv" -exec cp {} TVE/shaders -vf \;
        -   cp logs/ TVE/ -rvf
    rules:
        -   if: $CI_COMMIT_TAG
            when: on_success
        -   if: $CI_COMMIT_BRANCH
            when: on_success
    artifacts:
        paths:
            - TVE/
